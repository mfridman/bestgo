// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: datapb/repository.proto

package datapb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId              int64                  `protobuf:"varint,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	RepoNodeId          string                 `protobuf:"bytes,2,opt,name=repo_node_id,json=repoNodeId,proto3" json:"repo_node_id,omitempty"`
	RepoName            string                 `protobuf:"bytes,3,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	RepoFullName        string                 `protobuf:"bytes,4,opt,name=repo_full_name,json=repoFullName,proto3" json:"repo_full_name,omitempty"`
	RepoDescription     string                 `protobuf:"bytes,5,opt,name=repo_description,json=repoDescription,proto3" json:"repo_description,omitempty"`
	RepoHomepage        string                 `protobuf:"bytes,6,opt,name=repo_homepage,json=repoHomepage,proto3" json:"repo_homepage,omitempty"`
	RepoDefaultBranch   string                 `protobuf:"bytes,7,opt,name=repo_default_branch,json=repoDefaultBranch,proto3" json:"repo_default_branch,omitempty"`
	RepoCreatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=repo_created_at,json=repoCreatedAt,proto3" json:"repo_created_at,omitempty"`
	RepoPushedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=repo_pushed_at,json=repoPushedAt,proto3" json:"repo_pushed_at,omitempty"`
	RepoUpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=repo_updated_at,json=repoUpdatedAt,proto3" json:"repo_updated_at,omitempty"`
	RepoFork            bool                   `protobuf:"varint,11,opt,name=repo_fork,json=repoFork,proto3" json:"repo_fork,omitempty"`
	RepoForksCount      int32                  `protobuf:"varint,12,opt,name=repo_forks_count,json=repoForksCount,proto3" json:"repo_forks_count,omitempty"`
	RepoOpenIssuesCount int32                  `protobuf:"varint,13,opt,name=repo_open_issues_count,json=repoOpenIssuesCount,proto3" json:"repo_open_issues_count,omitempty"`
	RepoStargazersCount int32                  `protobuf:"varint,14,opt,name=repo_stargazers_count,json=repoStargazersCount,proto3" json:"repo_stargazers_count,omitempty"`
	RepoSize            int32                  `protobuf:"varint,15,opt,name=repo_size,json=repoSize,proto3" json:"repo_size,omitempty"`
	RepoArchived        bool                   `protobuf:"varint,16,opt,name=repo_archived,json=repoArchived,proto3" json:"repo_archived,omitempty"`
	RepoHasIssues       bool                   `protobuf:"varint,17,opt,name=repo_has_issues,json=repoHasIssues,proto3" json:"repo_has_issues,omitempty"`
	RepoHasWiki         bool                   `protobuf:"varint,18,opt,name=repo_has_wiki,json=repoHasWiki,proto3" json:"repo_has_wiki,omitempty"`
	RepoHasPages        bool                   `protobuf:"varint,19,opt,name=repo_has_pages,json=repoHasPages,proto3" json:"repo_has_pages,omitempty"`
	RepoHasProjects     bool                   `protobuf:"varint,20,opt,name=repo_has_projects,json=repoHasProjects,proto3" json:"repo_has_projects,omitempty"`
	RepoHasDownloads    bool                   `protobuf:"varint,21,opt,name=repo_has_downloads,json=repoHasDownloads,proto3" json:"repo_has_downloads,omitempty"`
	RepoLicenseKey      string                 `protobuf:"bytes,22,opt,name=repo_license_key,json=repoLicenseKey,proto3" json:"repo_license_key,omitempty"`
	RepoTopics          []string               `protobuf:"bytes,23,rep,name=repo_topics,json=repoTopics,proto3" json:"repo_topics,omitempty"`
	RepoOwnerLogin      string                 `protobuf:"bytes,24,opt,name=repo_owner_login,json=repoOwnerLogin,proto3" json:"repo_owner_login,omitempty"`
	RepoOwnerId         int64                  `protobuf:"varint,25,opt,name=repo_owner_id,json=repoOwnerId,proto3" json:"repo_owner_id,omitempty"`
	RepoOwnerNodeId     string                 `protobuf:"bytes,26,opt,name=repo_owner_node_id,json=repoOwnerNodeId,proto3" json:"repo_owner_node_id,omitempty"`
	RepoOwnerType       RepoOwnerType          `protobuf:"varint,27,opt,name=repo_owner_type,json=repoOwnerType,proto3,enum=datapb.RepoOwnerType" json:"repo_owner_type,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datapb_repository_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_datapb_repository_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_datapb_repository_proto_rawDescGZIP(), []int{0}
}

func (x *Repository) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *Repository) GetRepoNodeId() string {
	if x != nil {
		return x.RepoNodeId
	}
	return ""
}

func (x *Repository) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *Repository) GetRepoFullName() string {
	if x != nil {
		return x.RepoFullName
	}
	return ""
}

func (x *Repository) GetRepoDescription() string {
	if x != nil {
		return x.RepoDescription
	}
	return ""
}

func (x *Repository) GetRepoHomepage() string {
	if x != nil {
		return x.RepoHomepage
	}
	return ""
}

func (x *Repository) GetRepoDefaultBranch() string {
	if x != nil {
		return x.RepoDefaultBranch
	}
	return ""
}

func (x *Repository) GetRepoCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RepoCreatedAt
	}
	return nil
}

func (x *Repository) GetRepoPushedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RepoPushedAt
	}
	return nil
}

func (x *Repository) GetRepoUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RepoUpdatedAt
	}
	return nil
}

func (x *Repository) GetRepoFork() bool {
	if x != nil {
		return x.RepoFork
	}
	return false
}

func (x *Repository) GetRepoForksCount() int32 {
	if x != nil {
		return x.RepoForksCount
	}
	return 0
}

func (x *Repository) GetRepoOpenIssuesCount() int32 {
	if x != nil {
		return x.RepoOpenIssuesCount
	}
	return 0
}

func (x *Repository) GetRepoStargazersCount() int32 {
	if x != nil {
		return x.RepoStargazersCount
	}
	return 0
}

func (x *Repository) GetRepoSize() int32 {
	if x != nil {
		return x.RepoSize
	}
	return 0
}

func (x *Repository) GetRepoArchived() bool {
	if x != nil {
		return x.RepoArchived
	}
	return false
}

func (x *Repository) GetRepoHasIssues() bool {
	if x != nil {
		return x.RepoHasIssues
	}
	return false
}

func (x *Repository) GetRepoHasWiki() bool {
	if x != nil {
		return x.RepoHasWiki
	}
	return false
}

func (x *Repository) GetRepoHasPages() bool {
	if x != nil {
		return x.RepoHasPages
	}
	return false
}

func (x *Repository) GetRepoHasProjects() bool {
	if x != nil {
		return x.RepoHasProjects
	}
	return false
}

func (x *Repository) GetRepoHasDownloads() bool {
	if x != nil {
		return x.RepoHasDownloads
	}
	return false
}

func (x *Repository) GetRepoLicenseKey() string {
	if x != nil {
		return x.RepoLicenseKey
	}
	return ""
}

func (x *Repository) GetRepoTopics() []string {
	if x != nil {
		return x.RepoTopics
	}
	return nil
}

func (x *Repository) GetRepoOwnerLogin() string {
	if x != nil {
		return x.RepoOwnerLogin
	}
	return ""
}

func (x *Repository) GetRepoOwnerId() int64 {
	if x != nil {
		return x.RepoOwnerId
	}
	return 0
}

func (x *Repository) GetRepoOwnerNodeId() string {
	if x != nil {
		return x.RepoOwnerNodeId
	}
	return ""
}

func (x *Repository) GetRepoOwnerType() RepoOwnerType {
	if x != nil {
		return x.RepoOwnerType
	}
	return RepoOwnerType_REPO_OWNER_TYPE_UNSPECIFIED
}

var File_datapb_repository_proto protoreflect.FileDescriptor

var file_datapb_repository_proto_rawDesc = []byte{
	0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x62, 0x1a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x70, 0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x09, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x46, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x70, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x48, 0x6f, 0x6d, 0x65, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x70, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x42, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x70,
	0x6f, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x72, 0x65, 0x70,
	0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x72, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65,
	0x70, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x70,
	0x6f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x67, 0x61, 0x7a, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x72, 0x65, 0x70, 0x6f, 0x53, 0x74,
	0x61, 0x72, 0x67, 0x61, 0x7a, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x70, 0x6f, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x48, 0x61,
	0x73, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x68, 0x61, 0x73, 0x5f, 0x77, 0x69, 0x6b, 0x69, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x72, 0x65, 0x70, 0x6f, 0x48, 0x61, 0x73, 0x57, 0x69, 0x6b, 0x69, 0x12, 0x24, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x48, 0x61, 0x73, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65,
	0x70, 0x6f, 0x48, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x48,
	0x61, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72,
	0x65, 0x70, 0x6f, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x7f, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x62, 0x42, 0x0f,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x66,
	0x72, 0x69, 0x64, 0x6d, 0x61, 0x6e, 0x2f, 0x62, 0x65, 0x73, 0x74, 0x67, 0x6f, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x44, 0x58,
	0x58, 0xaa, 0x02, 0x06, 0x44, 0x61, 0x74, 0x61, 0x70, 0x62, 0xca, 0x02, 0x06, 0x44, 0x61, 0x74,
	0x61, 0x70, 0x62, 0xe2, 0x02, 0x12, 0x44, 0x61, 0x74, 0x61, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x44, 0x61, 0x74, 0x61, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datapb_repository_proto_rawDescOnce sync.Once
	file_datapb_repository_proto_rawDescData = file_datapb_repository_proto_rawDesc
)

func file_datapb_repository_proto_rawDescGZIP() []byte {
	file_datapb_repository_proto_rawDescOnce.Do(func() {
		file_datapb_repository_proto_rawDescData = protoimpl.X.CompressGZIP(file_datapb_repository_proto_rawDescData)
	})
	return file_datapb_repository_proto_rawDescData
}

var file_datapb_repository_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_datapb_repository_proto_goTypes = []interface{}{
	(*Repository)(nil),            // 0: datapb.Repository
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(RepoOwnerType)(0),            // 2: datapb.RepoOwnerType
}
var file_datapb_repository_proto_depIdxs = []int32{
	1, // 0: datapb.Repository.repo_created_at:type_name -> google.protobuf.Timestamp
	1, // 1: datapb.Repository.repo_pushed_at:type_name -> google.protobuf.Timestamp
	1, // 2: datapb.Repository.repo_updated_at:type_name -> google.protobuf.Timestamp
	2, // 3: datapb.Repository.repo_owner_type:type_name -> datapb.RepoOwnerType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_datapb_repository_proto_init() }
func file_datapb_repository_proto_init() {
	if File_datapb_repository_proto != nil {
		return
	}
	file_datapb_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_datapb_repository_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datapb_repository_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datapb_repository_proto_goTypes,
		DependencyIndexes: file_datapb_repository_proto_depIdxs,
		MessageInfos:      file_datapb_repository_proto_msgTypes,
	}.Build()
	File_datapb_repository_proto = out.File
	file_datapb_repository_proto_rawDesc = nil
	file_datapb_repository_proto_goTypes = nil
	file_datapb_repository_proto_depIdxs = nil
}
